//
// Prefix header for all source files of the 'test_nav_xib' target in the 'test_nav_xib' project
//

#import <Availability.h>

#ifndef __IPHONE_7_0
#warning "This project uses features only available in iOS SDK 7.0 and later."
#endif


#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <objc/message.h>

    #import "SDImageCache.h"

//  #import "UIImageView+WebCache.h"

    #import "iSmartObjectSwizzling.h"
    #import "UIRefreshControl+FixOffset.h"
#endif


#import "Defines.h"


#define DOCUMENTS [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject]

//=================== DEBUG_LOG ==================
#define _DEB__LOG_ 1

#if _DEB__LOG_  //in debug mode = 1
    #define _DEBUG__NSLOG
    #define _DEBUG__MSG
    #define _DEBUG__MSG0
#else           //in release mode = 0
  #define _DEBUG__NSLOG
  #define _DEBUG__MSG
  #define _DEBUG__MSG0
#endif

#ifdef _DEBUG__MSG
#define _NSLog(...)  NSLog(__VA_ARGS__)
#else
#define _NSLog(...)
#endif

#ifdef _DEBUG__MSG0
#define _NSLog0(...)  NSLog(__VA_ARGS__)
#else
#define _NSLog0(...)
#endif

#ifndef _DEBUG__NSLOG
#define NSLog(...)    ((void)0)
#endif
//=====================================

//void (*msg)(id,SEL) = (void(*)(id,SEL))objc_msgSend;
//fff(self.tableView,selector);



#ifdef DEBUG
#define DLog(...) NSLog(@"%s(%p) %@", __PRETTY_FUNCTION__, self, \
    [NSString stringWithFormat:__VA_ARGS__])

    #define ALog(...) {                             \
    NSLog(@"%s(%p) %@", __PRETTY_FUNCTION__, self,  \
    [NSString stringWithFormat:__VA_ARGS__]);       \
    [[NSAssertionHandler currentHandler] handleFailureInFunction:[NSString   \
    stringWithCString:__PRETTY_FUNCTION__ encoding:NSUTF8StringEncoding]     \
    file:[NSString stringWithCString:__FILE__ encoding:NSUTF8StringEncoding] \
    lineNumber:__LINE__ description:__VA_ARGS__]; \
    }
#else
    #define DLog(...) do { } while (0) 

    #ifndef NS_BLOCK_ASSERTIONS
        #define NS_BLOCK_ASSERTIONS
    #endif

    #define ALog(...) NSLog(@"%s(%p) %@", __PRETTY_FUNCTION__, self, \
    [NSString stringWithFormat:__VA_ARGS__])
#endif

#define ZAssert(condition, ...) do { \
    if (!(condition)) {     \
    ALog(__VA_ARGS__);      \
    }\
} while(0) \




#define use_FIC_Cache

#define use_SDW_Cache

#define use_Haneke_Cache







